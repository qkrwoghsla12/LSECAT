## This is a project made within Seoul National University of Science and Technology
## Embedded Systems Laboratory 2015 - Raimarius Tolentino Delgado


## Makefile (Xenomai)
#######################################################################################################

XENOMAI_PATH=/bbb-rt/xenomai
#XENOMAI_PATH=/rtProj/xenomai

#CFLAGS_OPTIONS = -Wall -D_GNU_SOURCE  
CFLAGS_OPTIONS = -Wall -D_GNU_SOURCE -march=armv7-a -mtune=cortex-a8 -mfloat-abi=hard -mfpu=neon -ffast-math -O3 

INC_ECAT = /bbb-rt/etherlab/include 
INC_EMBD = ./libs/embedded/ 
INC_SERVO = ./libs/ecatservo/ 
INC_LIBS = ./libs/ 
INC_XENO = $(shell $(XENOMAI_PATH)/bin/xeno-config --skin native --cflags)
INC_DIRS = -I$(INC_ECAT) -I$(INC_EMBD) -I$(INC_SERVO) -I$(INC_LIBS) $(INC_XENO) 

LIB_XENO = $(shell $(XENOMAI_PATH)/bin/xeno-config --skin native --ldflags)
LIB_DIR  = /bbb-rt/etherlab/lib 

CFLAGS   = $(CFLAGS_OPTIONS) $(INC_DIRS)
#LDFLAGS	 = -lm $(LIB_XENO) -L$(LIB_DIR) -lethercat_rtdm
LDFLAGS	 = -lm $(LIB_XENO) -L$(LIB_DIR) -lethercat

SOURCES	= ./main.c\
	  $(INC_SERVO)embdECATM.c

CUR_DIR = ./
OBJ_DIR = obj
OUT_DIR = bin
OUT	= ecat-embedded
START	= start

ifeq ($(wildcard main.cpp),)
CC = $(CROSS_COMPILE)gcc
else
CC = $(CROSS_COMPILE)g++
endif

LD = $(CROSS_COMPILE)ld
AS = $(CROSS_COMPILE)as

CHMOD	= /bin/chmod
MKDIR	= /bin/mkdir
ECHO	= echo
RM	= /bin/rm
#######################################################################################################
OBJECTS = $(addprefix $(OBJ_DIR)/, $(notdir $(patsubst %.c, %.o, $(patsubst %.cpp, %.o, $(SOURCES)))))
#######################################################################################################
vpath %.c  $(CUR_DIR) $(INC_SERVO) $(INC_EMBD)
vpath %.cpp $(CUR_DIR) $(INC_SERVO) $(INC_EMBD)
#######################################################################################################

ifeq ($(wildcard $(START).sh),)
all: 	$(OUT_DIR)/$(OUT) $(START)
	@$(ECHO) BUILD DONE.
	@$(CHMOD) +x $(START).sh
else
all: 
	@$(ECHO) BUILD ERROR: Run make clean first!
endif

$(START): 
	@$(ECHO) \
	"## This is a project made within Seoul National University of Science and Technology \n"\
	"## Embedded Systems Laboratory 2015 - Raimarius Tolentino Delgado \n\n"\
	"## Start-up for dynamically linked executable file \n\n\n\n"\
	"export LD_LIBRARY_PATH=$(XENOMAI_PATH)/lib:$(LIB_DIR) \n"\
	"./$(OUT_DIR)/$(OUT) \$$1 \$$2 \n" >> $(START).sh 

$(OUT_DIR)/$(OUT): $(OBJECTS)
	@$(MKDIR) -p $(OUT_DIR); pwd > /dev/null
	$(CC) -o $(OUT_DIR)/$(OUT) $(OBJECTS) $(LDFLAGS)

$(OBJ_DIR)/%.o : %.cpp
	@$(MKDIR) -p $(OBJ_DIR); pwd > /dev/null
	$(CC) -MD $(CFLAGS) -c -o $@ $<

$(OBJ_DIR)/%.o : %.c
	@$(MKDIR) -p $(OBJ_DIR); pwd > /dev/null
	$(CC) -MD $(CFLAGS) -c -o $@ $<

clean:
	$(RM) -rf \
		$(OBJ_DIR)/* \
		$(OBJ_DIR)   \
      		$(OUT_DIR)/* \
      		$(OUT_DIR)   \
      		$(START)*    \

.PHONY: all clean 
#######################################################################################################
# Include header file dependencies generated by -MD option:
-include $(OBJ_DIR_CUR)/*.d


